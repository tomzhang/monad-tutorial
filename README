To build the document
=====================
The build script (Build.hs, Document.hs) is written using the Haskell programming language. I have included some bash
scripts that make use of these source files to perform certain operations. Many of the build functions will require
certain executables on the path. These are:
* java
* xsltproc
* unzip
* svn
Unfortunately this may exclude some Microsoft Windows users. If this is inconvenient and you are keen to contribute to
this project, but you use Windows, I may be able to remove the reference to unzip or perhaps there is a solution for
Windows. In any case, the unzip function is only used once for initialisation of a fresh checkout -- you may choose
to override this manually by unzipping build/docbook-xsl-1.75.0.zip in the build directory, then you won't ever need the
unzip function (see the init script below).

Quick bash scripts
==================
There are some bash scripts included in the trunk of the project for quick execution of the Haskell build functions. I
will list a few of them here. All build outputs will go into build/monad-tutorial under an appropriate directory.

clean
-----
This script will delete the built document artifacts.

init
----
This function unzips build/docbook-xsl-1.75.0.zip in the build directory and is only required to be run once in a fresh
checkout, after which it will never need to be run again.

fo
--
This script will build the document in Formatting Objects (FO) format. This is required before building PDF, RTF, PNG or
Postscript format.

html
----
This script will build a single HTML file representation of the document.

xhtml
-----
This script will build a single XHTML file representation of the document.

chunkHtml
---------
This script will build multi-page HTML files representating the document starting at index.html.

chunkXhtml
----------
This script will build multi-page XHTML files representating the document starting at index.html.

pdf
---
This script will build a single Portable Document Format (PDF) representation of the document. You must have an
up-to-date FO output (see the fo script).

ps
--
This script will build a single Postscript (PS) representation of the document. You must have an up-to-date FO output
(see the fo script).

png
---
This script will build a single Portable Network Graphics (PNG) representation of the document. You must have an
up-to-date FO output (see the fo script).

all
---
This script will build all the available document formats.

release
-------
This script will build all documentas, tag the repository and update the version number. You will need commit access to
the source repository for this to succeed.
